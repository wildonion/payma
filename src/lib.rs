

// Malware in rust using ram concepts (static and const are in segment data and let is on the stack)
// injectable code like .so and .dll

// https://github.com/skerkour/black-hat-rust/tree/main/ch_11
// https://cryptobook.nakov.com/digital-signatures

// ------
// TASK-1
// ------
// encrypt the whole os using ring based on PGP keypairs
// we can decrypt it with private key only and the victim
// must pay for the private key
// ...

// ------
// TASK 2
// ------
// sha256 of the file must be equals to the one generated by the server to verify the file signature
// software and code update and data encryption using PGP cert keys and ed25519 public key digital signature
// symmetric single private key for en(de)cryption
// asymmetric ed25519 digital signature key 
//    --- has of public key which is wallet
//    --- private key can be used to sign tx
//    --- seed phrase can be used to generate the keypairs 
//    --- public key can be used to verify the signature agains the utf8 bytes of data
// ...

// ------
// TASK 3
// ------
// smart contract to pay developer salary based on github commits using escrow contract
/*
    1 - generate keypair for both parties
    2 - employee deposit the full payment into this contract 
    3 - the whole moeny will be mapped to the contractor in this contract
    4 - on every 10 commits, confirmed by the employee full/10 will be transferred to the contractor
    5 - we run step 4 inside a loop{} until all the moeny gets paid to the contractor
*/
// ...